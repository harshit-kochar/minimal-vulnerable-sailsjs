{"id": "CVE-2024-43799", "package": "npm:send", "purl": "pkg:npm/send@0.18.0", "package_type": "npm", "package_usage": "required", "version": "0.18.0", "fix_version": "0.19.0", "severity": "MEDIUM", "cvss_score": "5.0", "short_description": "# send vulnerable to template injection that can lead to XSS\n### Impact\n\npassing untrusted user input\t even after sanitizing it\t to `SendStream.redirect()` may execute untrusted code\n\n### Patches\n\nthis issue is patched in send 0.19.0\n\n### Workarounds\n\nusers are encouraged to upgrade to the patched version of express, but otherwise can workaround this issue by making sure any untrusted inputs are safe, ideally by validating them against an explicit allowlist\n\n### Details\n\nsuccessful exploitation of this vector requires the following:\n\n1. The attacker MUST control the input to response.redirect()\n1. express MUST NOT redirect before the template appears\n1. the browser MUST NOT complete redirection before:\n1. the user MUST click on the link in the template\n\nUpgrade to version 0.19.0 or later", "related_urls": [], "occurrence_count": 4, "reachable_flows": 0}
{"id": "CVE-2024-43800", "package": "npm:serve-static", "purl": "pkg:npm/serve-static@1.15.0", "package_type": "npm", "package_usage": "required", "version": "1.15.0", "fix_version": "1.16.0", "severity": "MEDIUM", "cvss_score": "5.0", "short_description": "# serve static vulnerable to template injection that can lead to XSS\n### Impact\n\npassing untrusted user input\t even after sanitizing it\t to `redirect()` may execute untrusted code\n\n### Patches\n\nthis issue is patched in serve static 1.16.0\n\n### Workarounds\n\nusers are encouraged to upgrade to the patched version of express, but otherwise can workaround this issue by making sure any untrusted inputs are safe, ideally by validating them against an explicit allowlist\n\n### Details\n\nsuccessful exploitation of this vector requires the following:\n\n1. The attacker MUST control the input to response.redirect()\n1. express MUST NOT redirect before the template appears\n1. the browser MUST NOT complete redirection before:\n1. the user MUST click on the link in the template\n\nUpgrade to version 1.16.0 or later", "related_urls": [], "occurrence_count": 2, "reachable_flows": 0}
{"id": "CVE-2024-43796", "package": "npm:express", "purl": "pkg:npm/express@4.19.2", "package_type": "npm", "package_usage": "required", "version": "4.19.2", "fix_version": "4.20.0", "severity": "MEDIUM", "cvss_score": "5.0", "short_description": "# express vulnerable to XSS via response.redirect()\n### Impact\n\nIn express <4.20.0, passing untrusted user input\t even after sanitizing it\t to `response.redirect()` may execute untrusted code\n\n### Patches\n\nthis issue is patched in express 4.20.0\n\n### Workarounds\n\nusers are encouraged to upgrade to the patched version of express, but otherwise can workaround this issue by making sure any untrusted inputs are safe, ideally by validating them against an explicit allowlist\n\n### Details\n\nsuccessful exploitation of this vector requires the following:\n\n1. The attacker MUST control the input to response.redirect()\n1. express MUST NOT redirect before the template appears\n1. the browser MUST NOT complete redirection before:\n1. the user MUST click on the link in the template\n\nUpgrade to version 4.20.0 or later", "related_urls": [], "occurrence_count": 3, "reachable_flows": 0}
{"id": "CVE-2024-45296", "package": "npm:path-to-regexp", "purl": "pkg:npm/path-to-regexp@0.1.7", "package_type": "npm", "package_usage": "required", "version": "0.1.7", "fix_version": "1.9.0", "severity": "HIGH", "cvss_score": "7.5", "short_description": "# path to regexp outputs backtracking regular expressions\n### Impact\n\nA bad regular expression is generated any time you have two parameters within a single segment, separated by something that is not a period (`.`). For example, `/:a :b`.\n\n### Patches\n\nFor users of 0.1, upgrade to `0.1.10`. All other users should upgrade to `8.0.0`.\n\nThese versions add backtrack protection when a custom regex pattern is not provided:\n\n\t[0.1.10 (https://github.com/pillarjs/path to regexp/releases/tag/v0.1.10)\n\t[1.9.0 (https://github.com/pillarjs/path to regexp/releases/tag/v1.9.0)\n\t[3.3.0 (https://github.com/pillarjs/path to regexp/releases/tag/v3.3.0)\n\nThey do not protect against vulnerable user supplied capture groups. Protecting against explicit user patterns is out of scope for this library and not considered a vulnerability.\n\nVersion [7.1.0 (https://github.com/pillarjs/path to regexp/releases/tag/v7.1.0) can enable `strict: true` and get an error when the regular expression might be bad.\n\nVersion [8.0.0 (https://github.com/pillarjs/path to regexp/releases/tag/v8.0.0) removes the features that can cause a ReDoS.\n\n### Workarounds\n\nAll versions can be patched by providing a custom regular expression for parameters after the first in a single segment. As long as the custom regular expression does not match the text before the parameter, you will be safe. For example, change `/:a :b` to `/:a :b([\t/ +)`.\n\nIf paths cannot be rewritten and versions cannot be upgraded, another alternative is to limit the URL length. For example, halving the attack string improves performance by 4x faster.\n\n### Details\n\nUsing `/:a :b` will produce the regular expression `/\t/([\t/ +?) ([\t/ +?) /?$/`. This can be exploited by a path such as `/a${' a'.repeat(8_000)}/a`. [OWASP (https://owasp.org/www community/attacks/Regular_expression_Denial_of_Service_ _ReDoS) has a good example of why this occurs, but the TL;DR is the `/a` at the end ensures this route would never match but due to naive backtracking it will still attempt every combination of the `:a :b` on the repeated 8,000 ` a`.\n\nBecause JavaScript is single threaded and regex matching runs on the main thread, poor performance will block the event loop and can lead to a DoS. In local benchmarks, exploiting the unsafe regex will result in performance that is over 1000x worse than the safe regex. In a more realistic environment using Express v4 and 10 concurrent connections, this translated to average latency of ~600ms vs 1ms.\n\n### References\n\n* [OWASP (https://owasp.org/www community/attacks/Regular_expression_Denial_of_Service_ _ReDoS)\n* [Detailed blog post (https://blakeembrey.com/posts/2024 09 web redos/)\nUpgrade to version 1.9.0 or later", "related_urls": [], "occurrence_count": 4, "reachable_flows": 0}
{"id": "CVE-2019-1010266", "package": "npm:lodash", "purl": "pkg:npm/lodash@4.17.10", "package_type": "npm", "package_usage": "required", "version": "4.17.10", "fix_version": "4.17.21", "severity": "MEDIUM", "cvss_score": "5.0", "short_description": "# Regular Expression Denial of Service (ReDoS) in lodash\nlodash prior to 4.7.11 is affected by: CWE-400: Uncontrolled Resource Consumption. The impact is: Denial of service. The component is: Date handler. The attack vector is: Attacker provides very long strings, which the library attempts to match using a regular expression. The fixed version is: 4.7.11.\n\n## Related CVE(s)\nCVE-2019-1010266, SNYK-JS-LODASH-73639", "related_urls": ["https://nvd.nist.gov/vuln/detail/CVE-2019-1010266", "https://github.com/lodash/lodash/issues/3359", "https://github.com/lodash/lodash/commit/5c08f18d365b64063bfbfa686cbb97cdd6267347", "https://github.com/lodash/lodash/wiki/Changelog", "https://security.netapp.com/advisory/ntap-20190919-0004", "https://snyk.io/vuln/SNYK-JS-LODASH-73639"], "occurrence_count": 125, "reachable_flows": 0}
{"id": "CVE-2020-28500", "package": "npm:lodash", "purl": "pkg:npm/lodash@4.17.10", "package_type": "npm", "package_usage": "required", "version": "4.17.10", "fix_version": "4.17.21", "severity": "MEDIUM", "cvss_score": "5.3", "short_description": "# Regular Expression Denial of Service (ReDoS) in lodash\nAll versions of package lodash prior to 4.17.21 are vulnerable to Regular Expression Denial of Service (ReDoS) via the `toNumber`, `trim` and `trimEnd` functions. \n\nSteps to reproduce (provided by reporter Liyuan Chen):\n```js\nvar lo = require('lodash');\n\nfunction build_blank(n) {\n\t\tvar ret = \"1\"\n\t\tfor (var i = 0; i < n; i++) {\n\t\t\t\tret += \" \"\n\t\t}\n\t\treturn ret + \"1\";\n}\nvar s = build_blank(50000) var time0 = Date.now();\nlo.trim(s) \nvar time_cost0 = Date.now() - time0;\nconsole.log(\"time_cost0: \" + time_cost0);\nvar time1 = Date.now();\nlo.toNumber(s) var time_cost1 = Date.now() - time1;\nconsole.log(\"time_cost1: \" + time_cost1);\nvar time2 = Date.now();\nlo.trimEnd(s);\nvar time_cost2 = Date.now() - time2;\nconsole.log(\"time_cost2: \" + time_cost2);\n```\n\n## Related CVE(s)\nCVE-2020-28500, SNYK-JAVA-ORGFUJIONWEBJARS-1074896, SNYK-JAVA-ORGWEBJARS-1074894, SNYK-JAVA-ORGWEBJARSBOWER-1074892, SNYK-JAVA-ORGWEBJARSBOWERGITHUBLODASH-1074895, SNYK-JAVA-ORGWEBJARSNPM-1074893, SNYK-JS-LODASH-1018905", "related_urls": ["https://nvd.nist.gov/vuln/detail/CVE-2020-28500", "https://github.com/lodash/lodash/pull/5065", "https://github.com/lodash/lodash/pull/5065/commits/02906b8191d3c100c193fe6f7b27d1c40f200bb7", "https://github.com/lodash/lodash/commit/c4847ebe7d14540bb28a8b932a9ce1b9ecbfee1a", "https://www.oracle.com/security-alerts/cpuoct2021.html", "https://www.oracle.com/security-alerts/cpujul2022.html", "https://www.oracle.com/security-alerts/cpujan2022.html", "https://www.oracle.com//security-alerts/cpujul2021.html", "https://snyk.io/vuln/SNYK-JS-LODASH-1018905", "https://snyk.io/vuln/SNYK-JAVA-ORGWEBJARSNPM-1074893", "https://snyk.io/vuln/SNYK-JAVA-ORGWEBJARSBOWERGITHUBLODASH-1074895", "https://snyk.io/vuln/SNYK-JAVA-ORGWEBJARSBOWER-1074892", "https://snyk.io/vuln/SNYK-JAVA-ORGWEBJARS-1074894", "https://snyk.io/vuln/SNYK-JAVA-ORGFUJIONWEBJARS-1074896", "https://security.netapp.com/advisory/ntap-20210312-0006", "https://github.com/lodash/lodash/blob/npm/trimEnd.js%23L8", "https://github.com/lodash/lodash", "https://cert-portal.siemens.com/productcert/pdf/ssa-637483.pdf"], "occurrence_count": 125, "reachable_flows": 0}
{"id": "CVE-2020-8203", "package": "npm:lodash", "purl": "pkg:npm/lodash@4.17.10", "package_type": "npm", "package_usage": "required", "version": "4.17.10", "fix_version": "4.17.21", "severity": "HIGH", "cvss_score": "7.4", "short_description": "# Prototype Pollution in lodash\nVersions of lodash prior to 4.17.19 are vulnerable to Prototype Pollution. The functions `pick`, `set`, `setWith`, `update`, `updateWith`, and `zipObjectDeep` allow a malicious user to modify the prototype of Object if the property identifiers are user-supplied. Being affected by this issue requires manipulating objects based on user-provided property values or arrays.\n\nThis vulnerability causes the addition or modification of an existing property that will exist on all objects and may lead to Denial of Service or Code Execution under specific circumstances.", "related_urls": ["https://nvd.nist.gov/vuln/detail/CVE-2020-8203", "https://github.com/lodash/lodash/issues/4744", "https://github.com/lodash/lodash/issues/4874", "https://github.com/github/advisory-database/pull/2884", "https://github.com/lodash/lodash/commit/c84fe82760fb2d3e03a63379b297a1cc1a2fce12", "https://hackerone.com/reports/712065", "https://hackerone.com/reports/864701", "https://github.com/lodash/lodash", "https://github.com/lodash/lodash/wiki/Changelog#v41719", "https://security.netapp.com/advisory/ntap-20200724-0006", "https://web.archive.org/web/20210914001339/https://github.com/lodash/lodash/issues/4744"], "occurrence_count": 125, "reachable_flows": 0}
{"id": "CVE-2019-10744", "package": "npm:lodash", "purl": "pkg:npm/lodash@4.17.10", "package_type": "npm", "package_usage": "required", "version": "4.17.10", "fix_version": "4.17.21", "severity": "CRITICAL", "cvss_score": "9.1", "short_description": "# Prototype Pollution in lodash\nVersions of `lodash` before 4.17.12 are vulnerable to Prototype Pollution.\tThe function `defaultsDeep` allows a malicious user to modify the prototype of `Object` via `{constructor: {prototype: {...}}}` causing the addition or modification of an existing property that will exist on all objects.\n\n## Recommendation\n\nUpdate to version 4.17.12 or later.\n\n## Related CVE(s)\nCVE-2019-10744, SNYK-JS-LODASH-450202", "related_urls": ["https://nvd.nist.gov/vuln/detail/CVE-2019-10744", "https://github.com/lodash/lodash/pull/4336", "https://access.redhat.com/errata/RHSA-2019:3024", "https://security.netapp.com/advisory/ntap-20191004-0005", "https://snyk.io/vuln/SNYK-JS-LODASH-450202", "https://support.f5.com/csp/article/K47105354?utm_source=f5support&amp%3Butm_medium=RSS", "https://support.f5.com/csp/article/K47105354?utm_source=f5support&amp;utm_medium=RSS", "https://www.npmjs.com/advisories/1065", "https://www.oracle.com/security-alerts/cpujan2021.html", "https://www.oracle.com/security-alerts/cpuoct2020.html"], "occurrence_count": 125, "reachable_flows": 0}
{"id": "CVE-2018-16487", "package": "npm:lodash", "purl": "pkg:npm/lodash@4.17.10", "package_type": "npm", "package_usage": "required", "version": "4.17.10", "fix_version": "4.17.21", "severity": "HIGH", "cvss_score": "7.5", "short_description": "# Prototype Pollution in lodash\nVersions of `lodash` before 4.17.11 are vulnerable to prototype pollution. \n\nThe vulnerable functions are 'defaultsDeep', 'merge', and 'mergeWith' which allow a malicious user to modify the prototype of `Object` via `{constructor: {prototype: {...}}}` causing the addition or modification of an existing property that will exist on all objects.\n\n\n\n\n## Recommendation\n\nUpdate to version 4.17.11 or later.", "related_urls": ["https://nvd.nist.gov/vuln/detail/CVE-2018-16487", "https://github.com/lodash/lodash/commit/90e6199a161b6445b01454517b40ef65ebecd2ad", "https://hackerone.com/reports/380873", "https://github.com/advisories/GHSA-4xc9-xhrj-v574", "https://security.netapp.com/advisory/ntap-20190919-0004", "https://www.npmjs.com/advisories/782"], "occurrence_count": 125, "reachable_flows": 0}
{"id": "CVE-2024-45590", "package": "npm:body-parser", "purl": "pkg:npm/body-parser@1.20.2", "package_type": "npm", "package_usage": "required", "version": "1.20.2", "fix_version": "1.20.3", "severity": "HIGH", "cvss_score": "7.5", "short_description": "# body-parser vulnerable to denial of service when url encoding is enabled\n### Impact\n\nbody-parser <1.20.3 is vulnerable to denial of service when url encoding is enabled. A malicious actor using a specially crafted payload could flood the server with a large number of requests, resulting in denial of service.\n\n### Patches\n\nthis issue is patched in 1.20.3\n\n### References", "related_urls": ["https://github.com/expressjs/body-parser/security/advisories/GHSA-qwcr-r2fm-qrc7", "https://github.com/expressjs/body-parser/commit/b2695c4450f06ba3b0ccf48d872a229bb41c9bce", "https://nvd.nist.gov/vuln/detail/CVE-2024-45590", "https://github.com/advisories/GHSA-qwcr-r2fm-qrc7"], "occurrence_count": 2, "reachable_flows": 0}
{"id": "CVE-2021-23337", "package": "npm:lodash", "purl": "pkg:npm/lodash@4.17.10", "package_type": "npm", "package_usage": "required", "version": "4.17.10", "fix_version": "4.17.21", "severity": "HIGH", "cvss_score": "7.2", "short_description": "# Command Injection in lodash\n`lodash` versions prior to 4.17.21 are vulnerable to Command Injection via the template function.", "related_urls": ["https://nvd.nist.gov/vuln/detail/CVE-2021-23337", "https://github.com/lodash/lodash/commit/3469357cff396a26c363f8c1b5a91dde28ba4b1c", "https://www.oracle.com/security-alerts/cpuoct2021.html", "https://www.oracle.com/security-alerts/cpujul2022.html", "https://www.oracle.com/security-alerts/cpujan2022.html", "https://www.oracle.com//security-alerts/cpujul2021.html", "https://snyk.io/vuln/SNYK-JS-LODASH-1040724", "https://snyk.io/vuln/SNYK-JAVA-ORGWEBJARSNPM-1074929", "https://snyk.io/vuln/SNYK-JAVA-ORGWEBJARSBOWERGITHUBLODASH-1074931", "https://snyk.io/vuln/SNYK-JAVA-ORGWEBJARSBOWER-1074928", "https://snyk.io/vuln/SNYK-JAVA-ORGWEBJARS-1074930", "https://snyk.io/vuln/SNYK-JAVA-ORGFUJIONWEBJARS-1074932", "https://security.netapp.com/advisory/ntap-20210312-0006", "https://github.com/lodash/lodash/blob/ddfd9b11a0126db2302cb70ec9973b66baec0975/lodash.js%23L14851", "https://github.com/lodash/lodash/blob/ddfd9b11a0126db2302cb70ec9973b66baec0975/lodash.js#L14851", "https://github.com/lodash/lodash", "https://cert-portal.siemens.com/productcert/pdf/ssa-637483.pdf"], "occurrence_count": 125, "reachable_flows": 0}
